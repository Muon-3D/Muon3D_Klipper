
#####################################################################
#   Homing Macros
#####################################################################

## Macros for sensorless, z-safe, and conditional homing

[force_move]
enable_force_move: true


[gcode_macro test]
gcode:
    M118 "{printer.query_endstops.last_query["z"]}"


[gcode_macro G28]
rename_existing: G28.1
variable_moved_z_yet = False
description: goming_overide creates recursive g28 calls with teh bed check macro
gcode:
    {% set hparams = params.VALUE %}

    {% set rq_all = 'X' not in hparams and 'Y' not in hparams and 'Z' not in hparams %}
    {% set rq_x = 'X' in hparams %}
    {% set rq_y = 'Y' in hparams %}
    {% set rq_z = 'Z' in hparams %} 


    {% set opt = 'O' in hparams %}

    {% set home_all = rq_all and not (opt and "x" in printer.toolhead.homed_axes and "y" in printer.toolhead.homed_axes and "z" in printer.toolhead.homed_axes) %}
    {% set home_x = rq_x and not (opt and "x" in printer.toolhead.homed_axes) %}
    {% set home_y = rq_y and not (opt and "y" in printer.toolhead.homed_axes) %}
    {% set home_z = rq_z and not (opt and "z" in printer.toolhead.homed_axes) %}

    {% if home_all or home_x or home_y or home_z %}
        {% if not printer["gcode_macro G28"].moved_z_yet and (home_x or home_y or home_z or home_all) %}
            FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=20 ACCEL=100
            SET_GCODE_VARIABLE MACRO=G28 VARIABLE=moved_z_yet VALUE=True
        {% endif %}
        # {% set bad_z = printer.query_endstops.last_query["z"] or ("z" in printer.toolhead.homes_axes and position.z < 10) %}
        # {% if bad_z %}
        #     
        # {% endif %}

        {% if home_all or home_y %}
            _HOME_Y
            # G90
            # G0 Y{(printer.toolhead.axis_maximum.y|float + printer.toolhead.axis_minimum.y|float) / 2.0} F3600
        {% endif %}

        {% if home_all or home_x %}
            _HOME_X
            # G90
            # G0 X{(printer.toolhead.axis_maximum.x|float + printer.toolhead.axis_minimum.x|float) / 2.0} F3600
        {% endif %}

        {% if home_all or home_z %}
            BED_CHECK CALLBACK="_HOME_Z PARK={params.PARK|default(True)}"
        {% else %}
            SET_GCODE_VARIABLE MACRO=G28 VARIABLE=moved_z_yet VALUE=False
        {% endif %}
    {% endif %}

[gcode_macro CANCEL_AND_CLOSE]
# This macro will (a) cancel the print, then (b) close whatever prompt is open.
gcode:
    CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro BED_CHECK]
gcode:
    # M118 "Callback:{params.CALLBACK} FROM_CALLBACK:{params.FROM_CALLBACK}"
    RESPOND TYPE=command MSG=action:prompt_end
    {% set bed_removed = printer.bed_removal_detector.bedRemoved %}
    {% if bed_removed %}
        #—1) Show a blocking prompt if the bed is detached
        M117 Bed Not Attached – Please re-attach
        RESPOND TYPE=command MSG="action:prompt_begin Bed Not Attached"
        RESPOND TYPE=command MSG="action:prompt_text Please re-attach the bed"
        RESPOND TYPE=command MSG="action:prompt_footer_button CONTINUE|BED_CHECK CALLBACK={params.CALLBACK}|primary"
        RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_AND_CLOSE|error"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        {params.CALLBACK}
    {% endif %}


[gcode_macro _HOME_X]
gcode:
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.settings['tmc2130 stepper_x'].run_current|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.settings['tmc2130 stepper_y'].run_current|float}

    SAVE_GCODE_STATE NAME=STATE_HOME_X

    # Wait just a second… (give StallGuard registers time to clear)
    #G4 P200

    # Home
    G28.1 X
    # # Move away
    # G91
    # G0 X5 F1200

    RESTORE_GCODE_STATE NAME=STATE_HOME_X


[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.settings['tmc2130 stepper_x'].run_current|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.settings['tmc2130 stepper_y'].run_current|float}

    SAVE_GCODE_STATE NAME=STATE_HOME_Y

    # Wait just a second… (give StallGuard registers time to clear)
    #G4 P200

    # Home
    G28.1 Y
    # # Move away
    # G91
    # G0 Y80 F1200

    RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[gcode_macro _HOME_Z]
variable_function_active: False
gcode:
    SAVE_GCODE_STATE NAME=STATE_HOME_Z


    SET_KINEMATIC_POSITION SET_HOMED=Z #To get the axes to move properly
    G90
    G0 X70 Y60 F7800
    M400
    G28.1 Z
    G0 Z10 F7800
    {% if params.PARK|default(True) %}
        G0 X200 Y0 F7800
    {% endif %}

    SET_GCODE_VARIABLE MACRO=G28 VARIABLE=moved_z_yet VALUE=False
    RESTORE_GCODE_STATE NAME=STATE_HOME_Z



[gcode_macro CHOME]
description: Alias for G28 O
gcode:
    G28 O
