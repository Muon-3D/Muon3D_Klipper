#####################################################################
#   Homing Macros
#####################################################################

[force_move]
enable_force_move: true

# Cancel and close any open prompt
[gcode_macro CANCEL_AND_CLOSE]
gcode:
  CANCEL_PRINT
  RESPOND TYPE=command MSG="action:prompt_end"

# ---------- Unified gate for Z homing ----------
[gcode_macro HOMING_GATE]
description: Block Z homing until toolhead + bed OK; shows modal
gcode:
  RESPOND TYPE=command MSG=action:prompt_end

  {% set toolhead_ok = not printer['mcu toolhead'].disconnected %}
  {% set bed_ok = not printer.bed_removal_detector.bedRemoved %}

  {% if not toolhead_ok or not bed_ok %}
    M117 Homing blocked
    RESPOND TYPE=command MSG="action:prompt_begin Homing blocked"
    {% if not toolhead_ok %} RESPOND TYPE=command MSG="action:prompt_text • Connect the toolhead umbilical" {% endif %}
    {% if not bed_ok %}     RESPOND TYPE=command MSG="action:prompt_text • Re-attach the bed"                 {% endif %}
    RESPOND TYPE=command MSG="action:prompt_footer_button CONTINUE|HOMING_GATE CALLBACK={params.CALLBACK}|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_AND_CLOSE|error"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% else %}
    {params.CALLBACK}
  {% endif %}

# ---------- G28 orchestrator ----------
[gcode_macro G28]
rename_existing: G28.1
variable_z_lifted_once: 0
description: Homing with single Z-lift + hardcoded Z gate
gcode:
  PROBE_RETRACT #for saftey to prevent probe damage

  {% set RP = rawparams|default("")|upper %}
  {% set rq_all = ('X' not in RP and 'Y' not in RP and 'Z' not in RP) %}
  {% set rq_x = 'X' in RP %}
  {% set rq_y = 'Y' in RP %}
  {% set rq_z = 'Z' in RP %}
  {% set OPT  = 'O' in RP %}

  {% set HA = printer.toolhead.homed_axes|default("") %}
  {% set home_x = (rq_all or rq_x) and not (OPT and ('x' in HA)) %}
  {% set home_y = (rq_all or rq_y) and not (OPT and ('y' in HA)) %}
  {% set home_z = (rq_all or rq_z) and not (OPT and ('z' in HA)) %}

  # default: proceed with homing
  {% set proceed = 1 %}

  # If Z is requested, hard-gate before any moves (toolhead + bed)
  {% if home_z %}
    {% set toolhead_ok = not printer['mcu toolhead'].disconnected %}
    {% set bed_ok = not printer.bed_removal_detector.bedRemoved %}
    {% if not (toolhead_ok and bed_ok) %}
      HOMING_GATE CALLBACK="G28 {rawparams}"
      {% set proceed = 0 %}
    {% endif %}
  {% endif %}

  {% if proceed %}
    # One-time Z lift per G28 call (after gate success, if any)
    {% set lift_dist = 10|float %}
    {% set z_homed  = 'z' in HA %}
    {% set z_pos    = printer.toolhead.position.z|float %}
    {% set any_home = (home_x or home_y or home_z) %}

    {% if (printer["gcode_macro G28"].z_lifted_once|int == 0 and any_home)
          or (any_home and z_homed and (z_pos < lift_dist)) %}
      FORCE_MOVE STEPPER=stepper_z DISTANCE={lift_dist} VELOCITY=20 ACCEL=100
      SET_GCODE_VARIABLE MACRO=G28 VARIABLE=z_lifted_once VALUE=1
    {% endif %}

    # Homing sequence
    {% if home_y %} _HOME_Y {% endif %}
    {% if home_x %} _HOME_X {% endif %}
    {% if home_z %} _HOME_Z PARK={params.PARK|default(True)} {% endif %}

    # Reset the one-time flag after homing work is done
    {% if home_x or home_y or home_z %}
      SET_GCODE_VARIABLE MACRO=G28 VARIABLE=z_lifted_once VALUE=0
    {% endif %}
  {% endif %}


# ---------- Axis helpers (kept straightforward) ----------
[gcode_macro _HOME_X]
gcode:
  # Sensorless currents (hardcode or read from config; here we read)
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.settings['tmc2130 stepper_x'].run_current|float}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.settings['tmc2130 stepper_y'].run_current|float}
  SAVE_GCODE_STATE NAME=STATE_HOME_X
  G28.1 X
  RESTORE_GCODE_STATE NAME=STATE_HOME_X

[gcode_macro _HOME_Y]
gcode:
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer.configfile.settings['tmc2130 stepper_x'].run_current|float}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={printer.configfile.settings['tmc2130 stepper_y'].run_current|float}
  SAVE_GCODE_STATE NAME=STATE_HOME_Y
  G28.1 Y
  RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[gcode_macro _HOME_Z]
gcode:
  SAVE_GCODE_STATE NAME=STATE_HOME_Z
  SET_KINEMATIC_POSITION SET_HOMED=Z
  G90
  G0 X69 Y60 F7800
  M400
  G28.1 Z
  G0 Z10 F7800
  {% if params.PARK|default(True) %} G0 X200 Y0 F7800 {% endif %}
  RESTORE_GCODE_STATE NAME=STATE_HOME_Z

# Convenience alias: conditional home
[gcode_macro CHOME]
gcode:
  G28 O
