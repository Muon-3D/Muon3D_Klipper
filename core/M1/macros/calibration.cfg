[gcode_macro CALIBRATE_HOTEND]
description: "Calibrate the tuning of the hotend for more accurate temperature control"
gcode:
    #todo add check to see if ehater block temp is close to ambient
    #todo check if toolehad is attatched
    #todo add info modal for user
    #Use delta required for more accurate sensor responsivness measurement
    MPC_CALIBRATE HEATER=extruder USE_DELTA=1 TARGET=200 FAN_BREAKPOINTS=6


[gcode_macro CALIBRATE_BED]
description: "Calibrate the tuning of the bed for more accurate temperature control"
gcode:
    #todo add check to see if heater bed temp is close to ambient
    #todo check if bed is attatched
    #todo move axes into correct positioning for fan to impinge bed
    #todo add info modal for user
    #Use delta required for more accurate sensor responsivness measurement
    MPC_CALIBRATE HEATER=heater_bed USE_DELTA=1 TARGET=90 FAN_BREAKPOINTS=6



[gcode_macro FINETUNE_RESONANCE]
variable_has_run: 0
description: Sweep ±5 Hz around current input shaper freqs—but only once per power-cycle
gcode:

    {% set already = printer["gcode_macro FINETUNE_RESONANCE"].has_run|int %}
    {% if already == 0 %}
        # --- first run: do the calibration sweep ---
        {% set fx = printer.configfile.settings.input_shaper.shaper_freq_x|default(55)|float %}
        {% set fy = printer.configfile.settings.input_shaper.shaper_freq_y|default(80)|float %}

        SHAPER_CALIBRATE AXIS=x FREQ_START={fx - 5} FREQ_END={fx + 5} HZ_PER_SEC=2
        SHAPER_CALIBRATE AXIS=y FREQ_START={fy - 5} FREQ_END={fy + 5} HZ_PER_SEC=2
        #TODO Change how the SHAPER_CALIBRATE works, to allow us to do the calculations after we have tested both axes, rather than twice for ecach one, to save time (~5s per axis to calibrate)

        # mark that we’ve run once
        SET_GCODE_VARIABLE MACRO=FINETUNE_RESONANCE VARIABLE=has_run VALUE=1
    {% else %}
    # --- subsequent calls skip ---
        M118 FINETUNE_RESONANCE already run this session, skipping
    {% endif %}