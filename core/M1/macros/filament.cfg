#####################################################################
#   Filament Macros with UI Prompts
#####################################################################

# ┌───────────────────────────────────────────────────────────────────┐
# │  1) UNLOAD FLOW                                                    │
# │     • M600_PROMPT: Ask user if they want to pause & unload.       │
# │     • M600_DO_UNLOAD: Closes prompt, pauses, and runs unload.     │
# │     • UNLOAD_FILAMENT: Actual unload sequence (as before).        │
# └───────────────────────────────────────────────────────────────────┘

[gcode_macro M600]
description: Prompt user to pause print and unload filament
gcode:
    PAUSE

    # 1) Open a dialog titled “Unload Filament”
    RESPOND TYPE=command MSG="action:prompt_begin Unload Filament"
    # 2) Ask for confirmation
    RESPOND TYPE=command MSG="action:prompt_text Do you want to pause the print and unload the filament?"
    # 3) Footer buttons: Unload (primary) / Cancel (error)
    RESPOND TYPE=command MSG="action:prompt_footer_button Unload|_DO_UNLOAD_M600|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button Cancel|_CANCEL_M600|error"
    # 4) Show the prompt
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _CANCEL_M600]
description: (called by M600) pause, notify, and unload filament
gcode:
    # 1) Close any open prompt
    RESPOND TYPE=command MSG="action:prompt_end"
    RESUME

[gcode_macro _DO_UNLOAD_M600]
description: (called by M600_PROMPT) pause, notify, and unload filament
gcode:
    # 1) Close any open prompt
    RESPOND TYPE=command MSG="action:prompt_end"
    # 2) Pause the print

    # 3) Inform the user
    RESPOND MSG="Unloading filament, reload before resuming"
    # 4) Run the actual unload routine
    UNLOAD_FILAMENT

    LOAD_FILAMENT_PROMPT


[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead. EXTRUDER_TEMP defaults to 210 if hotend is cold
gcode:
    {% set EXTRUDER_TEMP = params.TEMP|default(210)|int %}
    {% set MIN_TEMP = params.TEMP|default(210)|float * 0.98 %}
    {% set CURRENT_TARGET = printer.extruder.target|float %}
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    G28 O
    G91                         ; relative positioning
    G1 Z20                      ; move nozzle upwards
    FRONT                       ; move the toolhead to the front

    {% if EXTRUDER_TEMP != 0 %}
        LED_PENDING
        {% if CURRENT_TARGET < EXTRUDER_TEMP %}
            M104 S{EXTRUDER_TEMP} ; only heat up if the current extruder is not already hot
        {% endif %}
        TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp
    {% endif %}
    LED_WORKING
    M83                         ; set extruder to relative mode
    G1 E10 F300                 ; extrude a little to soften tip
    G1 E-30 F3600               ; quickly retract a small amount to eliminate stringing
    G4 P200                     ; pause for a short amount of time
    G1 E-400 F1200              ; retract slowly the rest of the way
    M400                        ; wait for moves to finish
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT
    M300 P400                   ; long beep to indicate unload complete
    M117 Unload Complete!
    LED_READY





[gcode_macro LOAD_FILAMENT]
description: Prompt user to insert new filament until extruder grabs it
gcode:
    {% set EXTRUDER_TEMP = params.TEMP|default(210)|int %}
    {% set MIN_TEMP = params.TEMP|default(210)|float * 0.8 %}
    {% set CURRENT_TARGET = printer.extruder.target|float %}
    {% set Z_TARGET = [[printer.toolhead.position.z|default(0)|float + 100, printer.toolhead.axis_maximum.z|float - 10]|min, printer.toolhead.position.z|default(0)|float]|max %}
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    # G28 O
    # G90             ; absolute positioning
    # G1 Z{Z_TARGET}  ; move nozzle upwards
    # FRONT           ; move the toolhead to the front

    {% if EXTRUDER_TEMP != 0 %}
        #LED_PENDING
        {% if CURRENT_TARGET < EXTRUDER_TEMP %}
            M104 S{EXTRUDER_TEMP} ; only heat up if the current extruder is not already hot
        {% endif %}
        #TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp
    {% endif %}
    # 1) Begin a dialog titled “Reload Filament”
    RESPOND TYPE=command MSG="action:prompt_begin Load Filament"
    # 2) Instruct the user
    RESPOND TYPE=command MSG="action:prompt_text Please insert filament into the extruder until it reaches the end."
        # 3) Button to feed more filament if not yet caught
    RESPOND TYPE=command MSG="action:prompt_footer_button EXIT|LOAD_FILAMENT_CANCEL|error"
    # 4) Footer button once filament is caught → proceed to load
    RESPOND TYPE=command MSG="action:prompt_footer_button FILAMENT INSERTED|_LOAD_FILAMENT_GRAB MIN_TEMP={MIN_TEMP}|primary"
    # 5) Show the prompt
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _LOAD_FILAMENT_GRAB]
description: Feed a small amount of filament, then re-display the load prompt
gcode:
    {% set MIN_TEMP = params.MIN_TEMP|default(160)|float %}

    {% if printer.extruder.temperature < MIN_TEMP %}
        RESPOND TYPE=command MSG="action:prompt_begin Hotend Heating"
        # 2) Instruct the user
        RESPOND TYPE=command MSG="action:prompt_text Please wait for the hotend to get to up temperature"

        RESPOND TYPE=command MSG="action:prompt_show"
        TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp
    {% endif %}
    SET_TMC_CURRENT STEPPER=extruder CURRENT={printer.configfile.settings['tmc2130 extruder'].hold_current|float} #turn motor on
    M400
    _LOAD_FILAMENT_MORE
    RESPOND TYPE=command MSG="action:prompt_begin Grab Filament"
    # 2) Instruct the user
    RESPOND TYPE=command MSG="action:prompt_text Has the filament been grabed by the extruder? (Cant remove it by hand)"
    # 3) Button to feed more filament if not yet caught
    RESPOND TYPE=command MSG="action:prompt_footer_button TRY AGAIN|_LOAD_FILAMENT_MORE|warning"
    # 4) Footer button once filament is caught → proceed to load
    RESPOND TYPE=command MSG="action:prompt_footer_button YES, FLAMENT GRABBED|_LOAD_FILAMENT_EXTRUDE|primary"
    # 5) Show the prompt
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro _LOAD_FILAMENT_MORE]
description: (called by LOAD_FILAMENT_PROMPT) close prompt and run load sequence
gcode:
    M83
    G1 E5 F400
    M400



[gcode_macro _LOAD_FILAMENT_EXTRUDE]
description: Close prompt and load new filament into toolhead
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"

    {% set EXTRUDER_TEMP = params.TEMP|default(210)|int %}
    {% set MIN_TEMP = params.TEMP|default(210)|float * 0.98 %}
    {% set CURRENT_TARGET = printer.extruder.target|float %}
    {% set Z_TARGET = [[printer.toolhead.position.z|default(0)|float + 100, printer.toolhead.axis_maximum.z|float - 10]|min, printer.toolhead.position.z|default(0)|float]|max %}
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    # G28 O
    # G90             ; absolute positioning
    # G1 Z{Z_TARGET}  ; move nozzle upwards
    # FRONT           ; move the toolhead to the front

    {% if EXTRUDER_TEMP != 0 %}
        #LED_PENDING
        {% if CURRENT_TARGET < EXTRUDER_TEMP %}
            M104 S{EXTRUDER_TEMP} ; only heat up if the current extruder is not already hot
        {% endif %}
        TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP} ; wait for min extrude temp
    {% endif %}
    #LED_WORKING
    M83                         ; set extruder to relative mode
    M106 S150                   ; Set part cooling fan to max    
    G1 E40 F1200              
    G1 E18 F600
    M400                        ; wait for moves to finish
    G1 E-4 F1200
    M104 S0
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={MIN_TEMP}
    M107                        ; turn off part cooling fan
    G4 P100
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT
    M117 Load Complete!
    # LED_READY
