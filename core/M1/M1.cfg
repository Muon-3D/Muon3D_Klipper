[mcu]
serial: /dev/UART-MAIN
baud: 2500000
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu toolhead]
serial: /dev/UART-TOOLHEAD
baud: 2500000
restart_method: command

[virtual_sdcard]
path: ~/printer_data/gcodes

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 6000
#max_accel_to_decel: 5000
square_corner_velocity: 7
max_z_velocity: 30
max_z_accel: 300



[adxl345]
cs_pin: toolhead:gpio24
spi_bus: spi0d
axes_map: x,y,z


[resonance_tester]
accel_chip: adxl345
probe_points:
    # Somewhere slightly above the middle of your print bed
    90,90, 20



# [duplicate_pin_override]
# pins: gpio7



# [shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
# #    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
# #    The number of results to keep in the result_folder. The oldest results will
# #    be automatically deleted after each runs.
# # keep_raw_csv: False
# #    If True, the raw CSV files will be kept in the result_folder alongside the
# #    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
# #    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
# #    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
# #    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.


#[motor_constants 17HE08-1004S]
# Coil resistance, Ohms
#resistance: 3.6
# Coil inductance, Henries
#inductance: 0.004
# Holding torque, Nm
#holding_torque: 0.17
# Nominal rated current, Amps
#max_current: 1
#steps_per_revolution: 200

#[motor_constants 14HS10-0404S]
# Coil resistance, Ohms
#resistance: 30
# Coil inductance, Henries
#inductance: 0.030
# Holding torque, Nm
#holding_torque: 0.14
# Nominal rated current, Amps
#max_current: 0.4
#steps_per_revolution: 200


#[autotune_tmc stepper_y]
#motor: 17HE08-1004S
#tuning_goal: performance
#sgt: 1
#voltage: 46

#[autotune_tmc stepper_x]
#motor: 17HE08-1004S
#tuning_goal: performance
#sgt: 1
#voltage: 46


#[autotune_tmc stepper_z]
#motor: 14HS10-0404S

#[autotune_tmc extruder]
#motor: 17HE08-1004S


[stepper_x]
step_pin: gpio17
dir_pin: gpio16
enable_pin: !gpio15
microsteps: 16
rotation_distance: 40 #20t * 2mm gt2 pitch
homing_retract_dist: 2
position_endstop: 0
position_max: 205
full_steps_per_rotation: 200

endstop_pin: tmc2130_stepper_x:virtual_endstop
homing_speed: 80


[tmc2130 stepper_x]
cs_pin: rpi:None
spi_bus: spi-X
run_current: 0.8
sense_resistor: 0.1
stealthchop_threshold: 9999999
interpolate = true

diag0_pin: ^!gpio18
driver_SGT: 2#1#2
#step_pulse_duration: 0.000001# helps with speed a bit
driver_TBL: 1
driver_TOFF: 3



[stepper_y]
step_pin: gpio21
dir_pin: !gpio20
enable_pin: !gpio19
microsteps: 16
rotation_distance: 40 #34t * 2mm gt2 pitch
homing_retract_dist: 2
position_endstop: 0
position_max: 173
full_steps_per_rotation: 200

endstop_pin: tmc2130_stepper_y:virtual_endstop
homing_speed: 80



[tmc2130 stepper_y]
cs_pin: rpi:None
spi_bus: spi-Y
run_current: 1
sense_resistor: 0.1
stealthchop_threshold: 9999999
interpolate: true

diag0_pin: ^!gpio22
driver_SGT: 2#1#2

driver_TBL: 1
driver_TOFF: 3



#step_pulse_duration: 0.000001# helps with speed a bit

# uart_pin: gpio9
# tx_pin: gpio8
# uart_address: 2
# run_current: 0.45
# stealthchop_threshold: 999999
# diag_pin: ^gpio7
# driver_SGTHRS: 30

[stepper_z]
step_pin: gpio24
dir_pin: !gpio23
enable_pin: !gpio25


microsteps: 16

rotation_distance: 4 #4mm pitch leadscrew
gear_ratio: 12:20, 30:15



full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -2
position_max: 160
homing_speed: 5

[tmc2130 stepper_z]
cs_pin: rpi:None
spi_bus: spi-Z

run_current: 0.6
hold_current: 0.3
sense_resistor: 0.1
stealthchop_threshold: 9999999
interpolate: true







# [homing_override]
# gcode:
#   G28 X0
#   G28 Y0
# axes: xy#z
# #set_position_z: 5

[gcode_macro REPEAT_MOVE]
description: "Macro to repeat FORCE_MOVE command with configurable distance, speed, acceleration, number of repeats, and stepper."
# Parameters:
# distance: The distance to move in mm
# speed: The speed/velocity of the move in mm/s
# accel: The acceleration in mm/s^2
# repeats: The number of times to repeat the move
# stepper: The stepper motor to move (e.g., stepper_x, stepper_y, etc.)

gcode:
    {% set distance = params.DISTANCE|default(300)|float %}
    {% set speed = params.SPEED|default(1000)|float %}
    {% set accel = params.ACCEL|default(10000)|float %}
    {% set repeats = params.REPEATS|default(5)|int %}
    {% set stepper = params.STEPPER|default("stepper_x") %}

    # G28 X Y
    # G91
    # G1 X10.0 Y10.0 F7800

    {% for i in range(repeats) %}
        FORCE_MOVE STEPPER={stepper} DISTANCE={distance} VELOCITY={speed} ACCEL={accel}
        FORCE_MOVE STEPPER={stepper} DISTANCE=-{distance} VELOCITY={speed} ACCEL={accel}
    {% endfor %}




[extruder]
step_pin: toolhead:gpio19
dir_pin: toolhead:gpio18
enable_pin: !toolhead:gpio16

rotation_distance: 39.26990 # 12.5mm * pi
gear_ratio: 91:10


microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor

max_extrude_only_distance: 400
max_extrude_only_velocity: 150.0
max_extrude_only_accel: 10000

nozzle_diameter: 0.4
filament_diameter: 1.75

heater_pin: toolhead:gpio3 #HE1
sensor_type: Generic 3950
sensor_pin: toolhead:gpio26

max_power: 0.3

#control: pid
#pid_Kp=24.092 
#pid_Ki=0.720 
#pid_Kd=201.470
min_temp: -100
max_temp: 260
max_extrude_cross_section: 2
pressure_advance: 0.18
min_extrude_temp: 160

[tmc2130 extruder]
cs_pin: toolhead:gpio21
spi_bus: spi0d
run_current: 1
hold_current: 0.4
sense_resistor: 0.1
stealthchop_threshold: 9999999
interpolate: True

driver_TBL: 1
driver_TOFF: 3








[thermistor CMFD473F4050HANT]
temperature1: 25
resistance1: 47000
beta: 4150

[temperature_sensor toolhead_heatsink_temp]
sensor_type: CMFD473F4050HANT
sensor_pin: toolhead:gpio27






[thermistor 104JT_XXXX]
temperature1: 25
resistance1: 100000
beta: 4390

[heater_bed]
heater_pin: gpio6
sensor_type: 104JT_XXXX
sensor_pin: gpio27
pwm_cycle_time: 0.005
max_power: 1

control: watermark  #CONSIDER MPC FOR BETTER TEMP CONTROL
max_delta: 2

min_temp: -100
max_temp: 130
smooth_time: 0.2

[bed_removal_detector]
threshold_temp: -200 #-15  # Temperature threshold to detect bed removal
interval: 0.1





[temperature_fan cm4_fan]
pin: gpio9
tachometer_pin: gpio12
max_power: 1
shutdown_speed: 0.0
cycle_time: 0.00005 #20khz
kick_start_time: 1

min_temp: -40
max_temp: 150
sensor_type: temperature_host

control: watermark
target_temp: 50

max_speed: 0.8
#TODO, COMBINED TEMP WITH RP2040 Builtin micro-controller temperature sensor rather than just cm4


[temperature_fan stepper_drivers]
pin: gpio10
tachometer_pin: gpio14
max_power: 1
shutdown_speed: 0.0
cycle_time: 0.00005 #20khz
kick_start_time: 1

min_temp: -40
max_temp: 150
sensor_type: CMFD473F4050HANT
sensor_pin: gpio26

control: watermark
target_temp: 45

max_speed: 0.8



[controller_fan psu_fan]
pin: gpio11
tachometer_pin: gpio13
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.00005 #20khz
kick_start_time: 1

fan_speed: 0.7
idle_timeout: 20

heater: extruder, heater_bed
# stepper: #default stepper is all of them



# [temperature_fan toolhead_heatsink]
# pin: toolhead:gpio4
# kick_start_time: 1
# #fan_speed: 1.0
# max_power: 1.0
# min_temp: -50
# max_temp: 300
# shutdown_speed: 0
# sensor_type: CMFD473F4050HANT
# sensor_pin: toolhead:gpio26
# control: watermark
# target_temp: 35

[heater_fan toolhead_heatsink]
pin: toolhead:gpio10
tachometer_pin: toolhead:gpio11
kick_start_time: 1
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.00005 #20khz

heater: extruder
heater_temp: 50
fan_speed: 0.7
#TODO, COMBINED TEMP WITH RP2040 Builtin micro-controller temperature sensor




# [fan]
# pin: gpio25#gpio20
# # cycle_time: 0.01

# # kick_start_time: 1
# # max_power: 1.0



[muon3d_probe]
pin_move_time: 0.5
stow_on_each_sample: False
control_pin: !toolhead:gpio2
sensor_pin: toolhead:gpio12
#z_offset: 3 #TODO: FIX AS OFFSETS NOT WORKING 
# x_offset: 56
# y_offset: 5
# speed: 4
# samples: 3
# sample_retract_dist: 1

[bed_tilt]
points: 
  5,30
  100,30
  100,160
  5,160
speed: 100
horizontal_move_z: 5

# [bed_screws]
# screw1: 0, 145
# screw2: 170, 145
# screw3: 100, 0


[safe_z_home]
home_xy_position: 50,90 # Change coordinates to the center of your print bed
speed: 100
z_hop: 5           # Move up 5mm
z_hop_speed: 10




[neopixel Left]
pin: gpio7
chain_count: 20
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[neopixel Right]
pin: gpio8
chain_count: 20
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0






[force_move]
enable_force_move = true #disable for production







#TODO: MOVE MACROS TO THEIR OWN FILE

[gcode_macro FORCE_Z_UP]
gcode: FORCE_MOVE STEPPER=stepper_z DISTANCE=30 VELOCITY=40


[gcode_macro TEST_EXTRUDER]
gcode = 
  {% set speed = params.SPEED|default(900)|float %}
  {% set repeats = params.REPEATS|default(5)|int %}
  {% set extruder_dist = params.extruder_dist|default(20)|int %}
  {% set retract_dist = params.retract_dist|default(7)|int %}
  {% for i in range(repeats) %}
    M83
    G1 E{retract_dist} F{speed}
    G1 E{extruder_dist} F{speed}
    G1 E-{retract_dist} F{speed}
  {% endfor %}

[gcode_macro UNLOAD_FILAMENT]
gcode = 
  M83 
  G1 E-30 F1800
  G1 E-100 F1200
  G1 E-100 F1200
  G1 E-100 F1200
  G1 E-100 F1200
  G92 E0
  G90

[gcode_macro LOAD_FILAMENT]
gcode = 
 ~
  G1 E20 F600
  G92 E0
  G90
  



[gcode_macro G29]
gcode = 
  G28
  G1 Z5 F800
	BED_TILT_CALIBRATE

[delayed_gcode my_delayed_gcode]
gcode:
    SET_LED LED=WS2812 RED=0 GREEN=0.05 BLUE=0.01 INDEX=3
    SET_LED LED=WS2812 RED=0.1 GREEN=0.1 BLUE=0.05 INDEX=2
    SET_LED LED=WS2812 RED=0.1 GREEN=0.1 BLUE=0.05 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0 GREEN=0.1 BLUE=0.02 INDEX=3
    SET_LED LED=WS2812 RED=0.2 GREEN=0.2 BLUE=0.1 INDEX=2
    SET_LED LED=WS2812 RED=0.2 GREEN=0.2 BLUE=0.1 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0 GREEN=0.15 BLUE=0.04 INDEX=3
    SET_LED LED=WS2812 RED=0.3 GREEN=0.3 BLUE=0.15 INDEX=2
    SET_LED LED=WS2812 RED=0.3 GREEN=0.3 BLUE=0.15 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0 GREEN=0.2 BLUE=0.05 INDEX=3
    SET_LED LED=WS2812 RED=0.4 GREEN=0.4 BLUE=0.2 INDEX=2
    SET_LED LED=WS2812 RED=0.4 GREEN=0.4 BLUE=0.2 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0 GREEN=0.3 BLUE=0.1 INDEX=3
    SET_LED LED=WS2812 RED=0.5 GREEN=0.5 BLUE=0.25 INDEX=2
    SET_LED LED=WS2812 RED=0.5 GREEN=0.5 BLUE=0.25 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0.6 GREEN=0.6 BLUE=0.3 INDEX=2
    SET_LED LED=WS2812 RED=0.6 GREEN=0.6 BLUE=0.3 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0.7 GREEN=0.7 BLUE=0.35 INDEX=2
    SET_LED LED=WS2812 RED=0.7 GREEN=0.7 BLUE=0.35 INDEX=1
    G4 P100
    SET_LED LED=WS2812 RED=0.9 GREEN=0.9 BLUE=0.45 INDEX=2
    SET_LED LED=WS2812 RED=0.9 GREEN=0.9 BLUE=0.45 INDEX=1
initial_duration: 0.1

[pause_resume]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  G91 E0
  G1 E-1.0 F240
  G92 E0
  G1 X5 Y5 F3000
  G91
  G1 Z5 F800
  G1 Z5 F800
  G1 Z5 F800
  G90

  BASE_CANCEL_PRINT

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F240
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F240
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F5000



[display_status]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_tilt]
#*# x_adjust = -0.002310
#*# y_adjust = -0.021205
#*# z_adjust = 2.343088
#*#
#*# [muon3d_probe]
#*# z_offset = 2.309
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.750
#*# pid_ki = 0.672
#*# pid_kd = 117.149
#*#